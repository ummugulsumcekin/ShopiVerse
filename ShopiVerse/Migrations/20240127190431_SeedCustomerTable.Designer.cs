// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopiVerse.Data;

#nullable disable

namespace ShopiVerse.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20240127190431_SeedCustomerTable")]
    partial class SeedCustomerTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopiVerse.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("ShopiVerse.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Beşiktaş Mahallesi, No:1",
                            City = "İstanbul",
                            District = "Beşiktaş",
                            Name = "Ali",
                            Surname = "Yılmaz"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Çankaya Mahallesi, No:2",
                            City = "Ankara",
                            District = "Çankaya",
                            Name = "Ayşe",
                            Surname = "Kaya"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Bornova Mahallesi, No:3",
                            City = "İzmir",
                            District = "Bornova",
                            Name = "Mehmet",
                            Surname = "Öz"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Nilüfer Mahallesi, No:4",
                            City = "Bursa",
                            District = "Nilüfer",
                            Name = "Elif",
                            Surname = "Demir"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Konyaaltı Mahallesi, No:5",
                            City = "Antalya",
                            District = "Konyaaltı",
                            Name = "Ahmet",
                            Surname = "Can"
                        },
                        new
                        {
                            Id = 6,
                            Address = "İlkadım Mahallesi, No:6",
                            City = "Samsun",
                            District = "İlkadım",
                            Name = "Zeynep",
                            Surname = "Balcı"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Ortahisar Mahallesi, No:7",
                            City = "Trabzon",
                            District = "Ortahisar",
                            Name = "Kemal",
                            Surname = "Yıldız"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Tepebaşı Mahallesi, No:8",
                            City = "Eskişehir",
                            District = "Tepebaşı",
                            Name = "Seda",
                            Surname = "Akar"
                        },
                        new
                        {
                            Id = 9,
                            Address = "İzmit Mahallesi, No:9",
                            City = "Kocaeli",
                            District = "İzmit",
                            Name = "Murat",
                            Surname = "Tekin"
                        },
                        new
                        {
                            Id = 10,
                            Address = "Şahinbey Mahallesi, No:10",
                            City = "Gaziantep",
                            District = "Şahinbey",
                            Name = "Esra",
                            Surname = "Kurt"
                        });
                });

            modelBuilder.Entity("ShopiVerse.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ShopiVerse.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("ShopiVerse.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ShopiVerse.Models.Cart", b =>
                {
                    b.HasOne("ShopiVerse.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopiVerse.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShopiVerse.Models.Order", b =>
                {
                    b.HasOne("ShopiVerse.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ShopiVerse.Models.OrderDetail", b =>
                {
                    b.HasOne("ShopiVerse.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopiVerse.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShopiVerse.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ShopiVerse.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ShopiVerse.Models.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
